#!/bin/bash

[ X"$MUNIN_DEBUG" = X1 ] && set -x

PLUGIN_FILENAME="${0##*/}"
if [[ "$PLUGIN_FILENAME" =~ _ ]]; then
    CONFIGURED_HOST="${PLUGIN_FILENAME##*_}"
fi
#Use localhost by default if host were not configured
HOST="${CONFIGURED_HOST:-localhost}"

declare -a CURL_OPTS=('-s')

#TODO: check for path with spaces, quotation and apostrophe
#Походу рекомендовать netrc, т.к. он позволяет reuse и переваривает(?) проблемные символы
if [ -n "$netrc_file" ]; then
    CURL_OPTS=("$CURL_OPTS" '--netrc-file' "$netrc_file")
fi

cfg_header() {
    echo "multigraph $1"
    [ -n "$CONFIGURED_HOST" ] && echo "host_name $HOST"
    echo 'graph_args --base 1000'
    echo 'graph_category network'
}

config() {
    cfg_header 'transmission_activity'
    echo "graph_title Transmission activity for $HOST"
    echo 'graph_vlabel torrents'
    echo 'graph_info This graph shows the number of Transmission torrents'
    echo 'total.label total'
    echo 'total.draw AREA'
    echo 'total.min 0'
    echo 'total.colour AFE3FF'
    echo 'active.label active'
    echo 'active.draw AREA'
    echo 'active.min 0'
    echo 'active.colour 77FF6F'
    echo 'paused.label paused'
    echo 'paused.draw LINE1'
    echo 'paused.min 0'
    echo 'paused.colour 8F8F8F'
    cfg_header 'transmission_throughput'
    echo "graph_title Transmission throughput for $HOST"
    echo 'graph_vlabel bits in (-) / out (+) per ${graph_period}'
    echo 'graph_info This graph shows the throughput for Transmission torrents'
    echo 'down.label throughput'
    echo 'down.type COUNTER'
    echo 'down.draw LINE1'
    echo 'down.min 0'
    echo 'down.cdef down,8,*'
    echo 'down.graph no'
    echo 'up.label sent'
    echo 'up.negative down'
    echo 'up.type COUNTER'
    echo 'up.draw LINE1'
    echo 'up.min 0'
    echo 'up.cdef up,8,*'
}


fetch() {
    RPCURL="http://$HOST:9091/transmission/rpc/"

    REPLY=$(curl "${CURL_OPTS[@]}" -I "$RPCURL")
    if [[ "$REPLY" =~ X-Transmission-Session-Id:\ *([[:alnum:]]*) ]]; then
        SID=${BASH_REMATCH[1]}
        STATS=$(curl "${CURL_OPTS[@]}" --data '{"method":"session-stats"}' --header "X-Transmission-Session-Id: $SID" "$RPCURL")

        [[ "$STATS" =~ torrentCount[^0-9]*([0-9]*) ]] && total=${BASH_REMATCH[1]}
        [[ "$STATS" =~ activeTorrentCount[^0-9]*([0-9]*) ]] && active=${BASH_REMATCH[1]}
        [[ "$STATS" =~ pausedTorrentCount[^0-9]*([0-9]*) ]] && paused=${BASH_REMATCH[1]}
        [[ "$STATS" =~ cumulative-stats([^}]*) ]] && CUMULATIVE_STATS=${BASH_REMATCH[1]}
        [[ "$CUMULATIVE_STATS" =~ downloadedBytes[^0-9]*([0-9]*) ]] && down=${BASH_REMATCH[1]}
        [[ "$CUMULATIVE_STATS" =~ uploadedBytes[^0-9]*([0-9]*) ]] && up=${BASH_REMATCH[1]}
    fi

    echo 'multigraph transmission_activity'
    echo "total.value ${total:-U}"
    echo "active.value ${active:-U}"
    echo "paused.value ${paused:-U}"
    echo 'multigraph transmission_throughput'
    echo "down.value ${down:-U}"
    echo "up.value ${up:-U}"
}

case "$1" in
    config)
        config
        ;;
    *)
        fetch
        ;;
esac

# vim:ft=sh
